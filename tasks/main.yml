---
# compat for amazon linux
- set_fact: ansible_distribution_major_version=6
  when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "NA"
  tags: ['iqserver']

- set_fact: ansible_distribution_major_version=7
  when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"
  tags: ['iqserver']

- set_fact: iqserver_base_url="{{ iqserver_url_protocol }}://{{ iqserver_url_hostname }}{{ iqserver_url_context_path }}"
  tags: ['iqserver']

- name: ensure iqserver user exists
  user:
    name: "{{ iqserver_user }}"
    state: present
    system: true
  tags: ['iqserver']

- name: ensure iqserver parent directory exists
  file:
    path: "{{ iqserver_base_dir }}"
    state: directory
    owner: "{{ iqserver_user }}"
    group: "{{ iqserver_user }}"
    mode: "0750"
  tags: ['iqserver']

- name: check if iqserver is already installed
  stat: path="{{ iqserver_base_dir }}/iqserver-{{ iqserver_version }}"
  register: iqserver_found
  tags: ['iqserver']

# Todo figure out how to version pin
- name: download iqserver binary
  get_url:
    url: "{{ iqserver_download_base_url }}nexus-iq-server-{{ iqserver_version}}-bundle.tar.gz"
    dest: "/usr/src/iqserver.tar.gz"
  when: not iqserver_found.stat.exists
  tags: ['iqserver']

- name: ensure iqserver directory exists with proper perms
  file:
    path: "{{ iqserver_base_dir }}/iqserver-{{ iqserver_version }}"
    mode: "0750"
    owner: "{{ iqserver_user }}"
    group: "{{ iqserver_user }}"
    state: directory
  tags: ['iqserver']

- name: untar iqserver
  become_user: "{{ iqserver_user }}"
  unarchive:
    src: "/usr/src/iqserver.tar.gz"
    dest: "{{ iqserver_base_dir }}/iqserver-{{ iqserver_version }}"
    copy: no
  when: not iqserver_found.stat.exists
  tags: ['iqserver']

- name: create iqserver symlink
  file:
    src: "{{ iqserver_base_dir }}/iqserver-{{ iqserver_version }}"
    dest: "{{ iqserver_base_dir }}/current"
    state: link
    owner: "{{ iqserver_user }}"
    group: "{{ iqserver_user }}"
  tags: ['iqserver']

- name: ensure that the repodata dir exists
  file:
    dest: "{{ iqserver_base_dir }}/sonatype-work"
    owner: "{{ iqserver_user }}"
    group: "{{ iqserver_user }}"
    mode: "0750"
    state: directory
  tags: ['iqserver']

- name: create symlink for iqserver data
  file:
    src: "{{ iqserver_base_dir }}/sonatype-work"
    dest: "{{ iqserver_base_dir }}/iqserver-{{ iqserver_version }}/sonatype-work"
    state: link
  tags: ['iqserver']

- name: place system limits config
  template:
    src: "etc.security.limits.d.99-iqserver.conf.j2"
    dest: "/etc/security/limits.d/99-iqserver.conf"
    owner: "root"
    group: "root"
    mode: "0640"
  notify:
    - reload systemd
    - restart iqserver
  tags: ['iqserver']

- name: place iqserver config
  template:
    src: "config.yml.j2"
    dest: "{{ iqserver_base_dir }}/current/config.yml"
    owner: "{{ iqserver_user }}"
    group: "{{ iqserver_user }}"
    mode: "0640"
  notify:
    - reload systemd
    - restart iqserver
  tags: ['iqserver']

- name: place iqserver sysinit script
  template:
    src: "etc.init.d.iqserver.j2"
    dest: "/etc/init.d/iqserver"
    owner: "root"
    group: "root"
    mode: "0755"
  tags: ['iqserver']

- name: place iqserver systemd service unit
  template:
    src: "etc.systemd.system.iqserver.service.j2"
    dest: "/etc/systemd/system/iqserver.service"
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
    - reload systemd
    - restart iqserver
  tags: ['iqserver']

- name: ensure the iqserver service has started
  service: name="iqserver" enabled=yes
  tags: ['iqserver']

- name: ensure the iqserver apache config files are set up
  template:
    src: "{{ item.name }}"
    dest: "{{ item.filename }}"
    owner: "root"
    group: "root"
    mode: "0640"
  with_items:
    - { name: etc.httpd.conf.d.iqserver.conf.j2, filename: /etc/httpd/conf.d/iqserver.conf }
  when: iqserver_use_apache
  notify: reload httpd
  tags: ['iqserver']
